language: node_js

node_js:
  - 17.9.1 # 19.x Ubuntu 16.04.7 version issue

cache:
  npm: true
  directories:
    - "~/.npm"
    - "node_modules"


before_install:
  - npm config set registry https://registry.npmjs.org/
  - npm install -g npm@8.11.0

install:
  - npm ci

script:
  - npm run lint
  - npm run test
  - npm run build

before_deploy:
  - openssl aes-256-cbc -K $encrypted_2d8c63ef40a5_key -iv $encrypted_2d8c63ef40a5_iv -in id_rsa.enc -out ../id_rsa -d
  - chmod 600 ../id_rsa
  - echo -e "Host $DEPLOY_SERVER\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

deploy:
  - export VERSION=$(git rev-parse --short HEAD) # Git 커밋 해시
  - echo $VERSION
  - rsync -rave "ssh -i ../id_rsa" --exclude=node_modules --exclude=dist --exclude=.git . $DEPLOY_USER@$DEPLOY_SERVER:~/blog-frontend
  - ssh -i ../id_rsa $DEPLOY_USER@$DEPLOY_SERVER "nohup mkdir -p blog-frontend && cd blog-frontend && npm install && npm run build && export VERSION='$VERSION' && docker build --build-arg VERSION=$VERSION -t bloomingflower/blog-frontend:$VERSION . && docker tag bloomingflower/blog-frontend:$VERSION bloomingflower/blog-frontend:latest && docker push bloomingflower/blog-frontend && rm -rf dist > /dev/null 2>&1 &"  #travis encrypt-file ../id_rsa --add --com
# argocd app sync blog-frontend
